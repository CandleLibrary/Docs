declare const comment: {
    fn: {};
    /************** Maps **************/
    st: any[][];
    ty: {
        1: number;
        2: number;
        3: number;
        4: number;
        8: number;
        16: number;
        32: number;
        64: number;
        128: number;
        256: number;
        264: number;
        512: number;
        1025: number;
        2049: number;
        4097: number;
        8193: number;
        16385: number;
        32769: number;
        number: number;
        num: number;
        identifier: number;
        string: number;
        white_space: number;
        open_bracket: number;
        close_bracket: number;
        operator: number;
        symbol: number;
        new_line: number;
        data_link: number;
        number_bin: number;
        number_oct: number;
        number_hex: number;
        number_int: number;
        number_sci: number;
        number_flt: number;
        alpha_numeric: number;
        white_space_new_line: number;
        id: number;
        str: number;
        ws: number;
        ob: number;
        cb: number;
        op: number;
        sym: number;
        nl: number;
        dl: number;
        int: number;
        integer: number;
        bin: number;
        binary: number;
        oct: number;
        octal: number;
        hex: number;
        hexadecimal: number;
        flt: number;
        float: number;
        sci: number;
        scientific: number;
        any: number;
        keyword: number;
    };
    sym: string[];
    lu: Map<string, number>;
    sts: any[][];
    fm: any[];
    gt: any;
    /************ Functions *************/
    fns: ((() => {
        type: string;
        preamble: any;
    }) | ((_: any) => any) | ((_: any, $: any, A: any, B: any) => any))[];
    sa: (((e: any) => number) | ((a: any, b: any, c: any, e: any, f: any, g: any, p: any) => number))[];
    gtk: (l: any, SYM_LU: any, IGNORE_KEYWORDS?: boolean) => any;
};
